package discussions.cmis242;

// Import modules

import javax.swing.*;
import java.text.DecimalFormat;

/**
 * @author jbjulia
 */
public class CryptoVert extends javax.swing.JFrame {

    /**
     * Private DecimalFormat instance
     */
    private static final DecimalFormat DEC = new DecimalFormat("#0.0000");
    /**
     * These conversion rates are current as of 12 NOV 2019, but are subject to
     * change in the future. To retain accuracy, please update these variables
     * before using this program for official purposes.
     */
    private final double BTC = 0.00011425;
    private final double LTC = 0.01632575;
    private final double ETH = 0.00536277;
    private final double XRP = 3.66;
    // Variables declaration - do not modify
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnConvert;
    private javax.swing.JLabel lblBTC;
    private javax.swing.JLabel lblDirections;
    private javax.swing.JLabel lblETH;
    private javax.swing.JLabel lblLTC;
    private javax.swing.JLabel lblXRP;
    private javax.swing.JTextField txtBTC;
    private javax.swing.JTextField txtETH;
    private javax.swing.JTextField txtLTC;
    private javax.swing.JTextField txtUSD1;
    private javax.swing.JTextField txtUSD2;
    private javax.swing.JTextField txtUSD3;
    private javax.swing.JTextField txtUSD4;
    private javax.swing.JTextField txtXRP;
    /**
     * Creates new form CryptoVert
     */
    public CryptoVert() {
        // Set title
        super("CryptoVert");

        // Initialize components
        initComponents();

        // Set window properties
        setLocationRelativeTo(null);
        setResizable(false);
        setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CryptoVert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CryptoVert().setVisible(true);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        lblDirections = new javax.swing.JLabel();
        txtUSD1 = new javax.swing.JTextField();
        txtUSD2 = new javax.swing.JTextField();
        txtUSD3 = new javax.swing.JTextField();
        txtUSD4 = new javax.swing.JTextField();
        txtBTC = new javax.swing.JTextField();
        txtLTC = new javax.swing.JTextField();
        txtETH = new javax.swing.JTextField();
        txtXRP = new javax.swing.JTextField();
        btnConvert = new javax.swing.JButton();
        lblBTC = new javax.swing.JLabel();
        lblLTC = new javax.swing.JLabel();
        lblETH = new javax.swing.JLabel();
        lblXRP = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CryptoVert");

        lblDirections.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        lblDirections.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDirections.setText("Please fill the empty fields below with unique USD amounts");
        lblDirections.setToolTipText("");

        txtUSD1.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        txtUSD1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtUSD2.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        txtUSD2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtUSD3.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        txtUSD3.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtUSD4.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        txtUSD4.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtBTC.setEditable(false);
        txtBTC.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        txtBTC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBTC.setEnabled(false);

        txtLTC.setEditable(false);
        txtLTC.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        txtLTC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLTC.setEnabled(false);

        txtETH.setEditable(false);
        txtETH.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        txtETH.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtETH.setToolTipText("");
        txtETH.setEnabled(false);

        txtXRP.setEditable(false);
        txtXRP.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        txtXRP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtXRP.setEnabled(false);

        btnConvert.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        btnConvert.setText("convert [ ! ]");
        btnConvert.setToolTipText("");
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        lblBTC.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        lblBTC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBTC.setText("bitcoin (btc)");

        lblLTC.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        lblLTC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLTC.setText("litecoin (ltc)");

        lblETH.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        lblETH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblETH.setText("etherium (eth)");

        lblXRP.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        lblXRP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblXRP.setText("ripple (xrp)");

        btnClear.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        btnClear.setText("clear [ - ]");
        btnClear.setToolTipText("");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblDirections, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtBTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lblBTC))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtLTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lblLTC))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtETH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lblETH))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblXRP)
                                                        .addComponent(txtXRP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(txtUSD1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(txtUSD2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(btnConvert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(txtUSD3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(txtUSD4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap(25, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[]{lblBTC, lblETH, lblLTC, lblXRP, txtBTC, txtETH, txtLTC, txtUSD1, txtUSD2, txtUSD3, txtUSD4, txtXRP});

        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(lblDirections, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtUSD1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtUSD2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtUSD3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtUSD4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnConvert, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnClear))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtBTC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtLTC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtETH, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtXRP, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblBTC)
                                        .addComponent(lblLTC)
                                        .addComponent(lblETH)
                                        .addComponent(lblXRP))
                                .addGap(25, 25, 25))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[]{btnClear, btnConvert, lblBTC, lblETH, lblLTC, lblXRP, txtBTC, txtETH, txtLTC, txtUSD1, txtUSD2, txtUSD3, txtUSD4, txtXRP});

        pack();
    }// </editor-fold>

    /**
     * Checks for null / invalid fields then performs conversions.
     */
    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            // Checks for null text fields
            if (txtUSD1.getText().equals("") || txtUSD2.getText().equals("") || txtUSD3.getText().equals("") || txtUSD4.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Uh-oh.\n\nIt looks like you missed a field.");
            } else {
                // Enable Crypto text fields
                txtBTC.setEnabled(true);
                txtLTC.setEnabled(true);
                txtETH.setEnabled(true);
                txtXRP.setEnabled(true);

                // Applies conversion rate to USD amounts entered in text fields
                txtBTC.setText(String.valueOf(DEC.format(Double.parseDouble(txtUSD1.getText()) * this.BTC)));
                txtLTC.setText(String.valueOf(DEC.format(Double.parseDouble(txtUSD2.getText()) * this.LTC)));
                txtETH.setText(String.valueOf(DEC.format(Double.parseDouble(txtUSD3.getText()) * this.ETH)));
                txtXRP.setText(String.valueOf(DEC.format(Double.parseDouble(txtUSD4.getText()) * this.XRP)));
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error!\n\nPlease enter a valid number.");
        }
    }

    /**
     * Clears text fields and resets form to default state.
     */
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {
        // Clear USD text fields
        txtUSD1.setText("");
        txtUSD2.setText("");
        txtUSD3.setText("");
        txtUSD4.setText("");

        // Clear Crytpo text fields
        txtBTC.setText("");
        txtLTC.setText("");
        txtETH.setText("");
        txtXRP.setText("");

        // Disable Crypto text fields
        txtBTC.setEnabled(false);
        txtLTC.setEnabled(false);
        txtETH.setEnabled(false);
        txtXRP.setEnabled(false);
    }
    // End of variables declaration
}
